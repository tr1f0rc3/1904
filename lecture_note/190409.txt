소멸자는 overloading 안됨.
friend 최대한 쓰면 안됨. 좋을 때가 있음.
생성자 만들어주면, 기본 복사생성자, 이동 생성자 자동으로 만들어줌.
복사 생성 시 값을 bit 복사함.
주소 복사 시 문제 생길 수 있음. 주소 복사 자체는 문제가 없으나,
	메모리를 직접 관리할 시 얕은 복사를 하면 문제가 생길 수도 있음. dangling pointer 문제.
얕은복사. 주소 복사 // 깊은 복사 값까지 복사하도록 하는게 깊은 복사.
그래서 얕은복사 시 생겨나는 문제를 방지하기 위해 nullptr 및 null을 꼭 해줘야함
싱글턴 사용 시 복사생성자를 막아야 함. 불필요하면 막아야함. 복사생성자를 prviate 선언하면 사용 못함, delete도 가능.

한 클래스 에서 나온 두 instance가 new를 쓰면 member value를 각각 다른 memory에 할당함.

static 같은 클래스 내 모든 객체가 공용 으로 사용 가능.
카테고리가 애매할 경우 static 사용.
private static 변수인데도 바깥에서 정의 가능
private member도 상속됨.

생성자 하나 만들면 기본 생성자는 없음. 따로 만들어야 함. 자식이 기본생성자를 가지고 있어도 부모의 기본 생성자가 없으면 따로 생성해줘야함.